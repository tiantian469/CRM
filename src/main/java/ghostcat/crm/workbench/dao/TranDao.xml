<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ghostcat.crm.workbench.dao.TranDao">


    <insert id="insertTran">
        insert into tbl_tran(id, owner, money, name, expectedDate, customerId, stage, type, source, activityId, contactsId, createBy, createTime, description, contactSummary, nextContactTime)
        VALUES (#{id},#{owner},#{money},#{name},#{expectedDate},#{customerId},#{stage},#{type},#{source},#{activityId},#{contactsId},#{createBy},#{createTime},#{description},#{contactSummary},#{nextContactTime})
    </insert>
    <insert id="insertTran2">
        insert into tbl_tran(id, owner, money, name, expectedDate, customerId, stage, type, source, activityId, contactsId, createBy, createTime, description, contactSummary, nextContactTime)
        VALUES (#{id},#{owner},#{money},#{name},#{expectedDate},#{customerId},#{stage},#{type},#{source},#{activityId},#{contactsId},#{createBy},#{createTime},#{description},#{contactSummary},#{nextContactTime})
    </insert>
    <update id="updateTran">
        update tbl_tran set owner = #{owner}, money = #{money}, name = #{name}, expectedDate = #{expectedDate}, customerId = #{customerId}, stage = #{stage}, type = #{type}, source = #{source}, activityId = #{activityId}
                          , contactsId = #{contactsId}, editBy = #{editBy}, editTime = #{editTime}, description = #{description}, contactSummary = #{contactSummary}, nextContactTime = #{nextContactTime} where id = #{id}
    </update>
    <update id="updateTranStage">
        update tbl_tran set stage = #{stage},editBy = #{editBy},editTime = #{editTime} where id = #{id}
    </update>
    <delete id="deleteInDetail">
        delete from tbl_tran where id = #{id}
    </delete>
    <select id="selectAllTran" resultType="ghostcat.crm.workbench.domain.Tran">
        select t.id, u.name as owner, t.money, t.name, t.expectedDate, cu.name as customerId, t.stage, t.type, t.source, t.activityId, c.fullname as contactsId, t.createBy, t.createTime, t.editBy, t.editTime, t.description, t.contactSummary, t.nextContactTime
        from tbl_tran t join tbl_user u on t.owner = u.id join tbl_customer cu on t.customerId = cu.id join tbl_contacts c on t.contactsId = c.id
        <where>
            <if test="owner != null and owner !=''">
                and u.name like '%' #{owner} '%'
            </if>
            <if test="name != null and name !=''">
                and t.name like '%' #{name} '%'
            </if>
            <if test="customerIds != null and customerIds.size() > 0">
                and t.customerId in
                <foreach collection="customerIds" separator="," open="(" close=")" item="customerId">
                    #{customerId}
                </foreach>
            </if>
            <if test="stage != null and stage !=''">
                and t.stage = #{stage}
            </if>
            <if test="type != null and type !=''">
                and t.type = #{type}
            </if>
            <if test="source != null and source !=''">
                and t.source = #{source}
            </if>
            <if test="contactsIds != null and contactsIds.size() > 0">
                and t.contactsId in
                <foreach collection="contactsIds" separator="," open="(" close=")" item="contactsId">
                        #{contactsId}
                </foreach>
            </if>
        </where>
        order by createTime
    </select>
    <select id="selectAllTranCount" resultType="java.lang.Integer">
        select count(*)
        from tbl_tran t join tbl_user u on t.owner = u.id join tbl_customer cu on t.customerId = cu.id join tbl_contacts c on t.contactsId = c.id
        <where>
            <if test="owner != null and owner !=''">
                and u.name like '%' #{owner} '%'
            </if>
            <if test="name != null and name !=''">
                and t.name like '%' #{name} '%'
            </if>
            <if test="customerIds != null and customerIds.size() > 0">
                and t.customerId in
                <foreach collection="customerIds" separator="," open="(" close=")" item="customerId">
                    #{customerId}
                </foreach>
            </if>
            <if test="stage != null and stage !=''">
                and t.stage = #{stage}
            </if>
            <if test="type != null and type !=''">
                and t.type = #{type}
            </if>
            <if test="source != null and source !=''">
                and t.source = #{source}
            </if>
            <if test="contactsIds != null and contactsIds.size() > 0">
                and t.contactsId in
                <foreach collection="contactsIds" separator="," open="(" close=")" item="contactsId">
                    #{contactsId}
                </foreach>
            </if>
        </where>
    </select>
    <select id="selectTranWithId" resultType="ghostcat.crm.workbench.domain.Tran">
        select t.id, u.name as owner, t.money, t.name, t.expectedDate, cu.name as customerId, t.stage, t.type, t.source, a.name as activityId, co.fullname as contactsId, t.createBy, t.createTime, t.editBy, t.editTime, t.description, t.contactSummary, t.nextContactTime
        from tbl_tran t join tbl_user u on t.owner = u.id left join tbl_activity a on t.activityId = a.id join tbl_customer cu on t.customerId = cu.id left join tbl_contacts co on t.contactsId = co.id
        where t.id = #{id}
    </select>
    <select id="selectTranWithId2" resultType="ghostcat.crm.workbench.domain.Tran">
        select t.id, t.owner, t.money, t.name, t.expectedDate, c.name as customerId, t.stage, t.type, t.source, t.activityId, t.contactsId, t.createBy, t.createTime, t.editBy, t.editTime, t.description, t.contactSummary, t.nextContactTime
        from tbl_tran t join tbl_customer c on t.customerId = c.id where t.id = #{id}
    </select>
    <select id="selectAllTranCount2" resultType="java.lang.Integer">
        select count(*) from tbl_tran
    </select>
    <select id="selectGroupByStage" resultType="java.util.Map">
        select count(*) as value ,stage as name from tbl_tran group by stage
    </select>
</mapper>

































